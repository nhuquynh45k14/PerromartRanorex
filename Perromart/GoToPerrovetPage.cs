///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace Perromart
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The GoToPerrovetPage recording.
    /// </summary>
    [TestModule("1d891aa4-142d-4a01-82fa-73aedecbab0d", ModuleType.Recording, 1)]
    public partial class GoToPerrovetPage : ITestModule
    {
        /// <summary>
        /// Holds an instance of the PerromartRepository repository.
        /// </summary>
        public static PerromartRepository repo = PerromartRepository.Instance;

        static GoToPerrovetPage instance = new GoToPerrovetPage();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public GoToPerrovetPage()
        {
            Url = "";
            Article = "";
            TextInArticle = "";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static GoToPerrovetPage Instance
        {
            get { return instance; }
        }

#region Variables

        string _Url;

        /// <summary>
        /// Gets or sets the value of variable Url.
        /// </summary>
        [TestVariable("c7e81956-6d6e-4473-bdca-90d4752d4e78")]
        public string Url
        {
            get { return _Url; }
            set { _Url = value; }
        }

        string _Article;

        /// <summary>
        /// Gets or sets the value of variable Article.
        /// </summary>
        [TestVariable("9352b487-f240-4de9-aa64-e78ba638bee2")]
        public string Article
        {
            get { return _Article; }
            set { _Article = value; }
        }

        string _TextInArticle;

        /// <summary>
        /// Gets or sets the value of variable TextInArticle.
        /// </summary>
        [TestVariable("356d61bb-48c2-4f3e-bdc1-8153a4f6be3e")]
        public string TextInArticle
        {
            get { return _TextInArticle; }
            set { _TextInArticle = value; }
        }

        /// <summary>
        /// Gets or sets the value of variable ArticleName.
        /// </summary>
        [TestVariable("1bb5acb3-3309-4712-895e-b451c35be08b")]
        public string ArticleName
        {
            get { return repo.ArticleName; }
            set { repo.ArticleName = value; }
        }

        /// <summary>
        /// Gets or sets the value of variable text.
        /// </summary>
        [TestVariable("2d056f7e-908a-4ee4-aba9-7ac6c08e788e")]
        public string text
        {
            get { return repo.text; }
            set { repo.text = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 20;
            Delay.SpeedFactor = 1.00;

            Init();

            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.HomePageUI.btnPerrovet' at Center.", repo.ApplicationUnderTest.HomePageUI.btnPerrovetInfo, new RecordItemIndex(0));
            repo.ApplicationUnderTest.HomePageUI.btnPerrovet.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 5s.", new RecordItemIndex(1));
            Delay.Duration(5000, false);
            
            Report.Log(ReportLevel.Info, "Invoke action", "Invoking Focus() on item 'PerrovetsYourFriendlyVetClinicAt'.", repo.PerrovetsYourFriendlyVetClinicAt.SelfInfo, new RecordItemIndex(2));
            repo.PerrovetsYourFriendlyVetClinicAt.Self.Focus();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeContains (PageUrl>$Url) on item 'PerrovetsYourFriendlyVetClinicAt'.", repo.PerrovetsYourFriendlyVetClinicAt.SelfInfo, new RecordItemIndex(3));
            Validate.AttributeContains(repo.PerrovetsYourFriendlyVetClinicAt.SelfInfo, "PageUrl", Url);
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Invoke action", "Invoking Focus() on item 'PerrovetsYourFriendlyVetClinicAt.PerrovetPageUI.OurBlog'.", repo.PerrovetsYourFriendlyVetClinicAt.PerrovetPageUI.OurBlogInfo, new RecordItemIndex(4));
            repo.PerrovetsYourFriendlyVetClinicAt.PerrovetPageUI.OurBlog.Focus();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'PerrovetsYourFriendlyVetClinicAt.PerrovetPageUI.OurBlog' at Center.", repo.PerrovetsYourFriendlyVetClinicAt.PerrovetPageUI.OurBlogInfo, new RecordItemIndex(5));
            repo.PerrovetsYourFriendlyVetClinicAt.PerrovetPageUI.OurBlog.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$Article' with focus on 'PerrovetsYourFriendlyVetClinicAt.PerrovetPageUI.txtSearch'.", repo.PerrovetsYourFriendlyVetClinicAt.PerrovetPageUI.txtSearchInfo, new RecordItemIndex(6));
            repo.PerrovetsYourFriendlyVetClinicAt.PerrovetPageUI.txtSearch.PressKeys(Article);
            Delay.Milliseconds(20);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Enter' Press with focus on 'PerrovetsYourFriendlyVetClinicAt.PerrovetPageUI.txtSearch'.", repo.PerrovetsYourFriendlyVetClinicAt.PerrovetPageUI.txtSearchInfo, new RecordItemIndex(7));
            Keyboard.PrepareFocus(repo.PerrovetsYourFriendlyVetClinicAt.PerrovetPageUI.txtSearch);
            Keyboard.Press(System.Windows.Forms.Keys.Return, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'PerrovetsYourFriendlyVetClinicAt.PerrovetPageUI.Article' at Center.", repo.PerrovetsYourFriendlyVetClinicAt.PerrovetPageUI.ArticleInfo, new RecordItemIndex(8));
            repo.PerrovetsYourFriendlyVetClinicAt.PerrovetPageUI.Article.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeContains (InnerText>$TextInArticle) on item 'PerrovetsYourFriendlyVetClinicAt.PerrovetPageUI.Content'.", repo.PerrovetsYourFriendlyVetClinicAt.PerrovetPageUI.ContentInfo, new RecordItemIndex(9));
            Validate.AttributeContains(repo.PerrovetsYourFriendlyVetClinicAt.PerrovetPageUI.ContentInfo, "InnerText", TextInArticle);
            Delay.Milliseconds(0);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
